plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
}

group = 'com.bntech'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:3.0.4"
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.bntech.bnauth.BnAuthApplication'
        )
    }
}

bootJar {
    enabled = true
    mainClass = 'com.bntech.bnauth.BnAuthApplication'
}

dependencies {
//    http
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

//    security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-messaging:6.0.3'
    implementation('com.auth0:java-jwt:4.4.0')

//    messaging
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

//    swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springdoc:springdoc-openapi:2.0.2'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

//    database
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate.validator:hibernate-validator'
    runtimeOnly 'org.postgresql:postgresql'

//    util & test
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('certs', Exec) {
    commandLine "sh", "$projectDir/tools/cert-gen.sh"
}

tasks.register('certsWPass', Exec) {
    def secretKey = project.hasProperty('secretKey') ? project.property('secretKey') : ''
    commandLine "sh", "$projectDir/tools/cert-gen.sh", secretKey
}

tasks.register('pgRun', Exec) {
    commandLine 'docker-compose', '-f', './tools/docker-compose.yml', '-p', 'bnauth', 'up', '-d'
}

tasks.register('pgStop', Exec) {
    commandLine 'docker-compose', '-p', 'bnauth', '-f', './tools/docker-compose.yml', 'down'
}

tasks.register('pgData', Exec) {
    commandLine "docker", "exec", "bnauth_postgres_1", "psql", "-U", "ui_test", "-d", "ui_test", "-a", "-f", "ui_test_populate.sql"
    environment 'PGPASSWORD', 'ui_test'
}

tasks.register('runAll', Exec) {
    commandLine "sh", "$projectDir/tools/container.sh"
    commandLine 'docker-compose', 'up', '-d'
}
