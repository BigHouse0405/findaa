plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.bntech'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:3.0.4"
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.bntech.qrekru.QrekruApplication'
        )
    }
}

bootJar {
    enabled = true
    mainClass = 'com.bntech.qrekru.QrekruApplication'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation('com.auth0:java-jwt:4.4.0')

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springdoc:springdoc-openapi:2.0.2'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate.validator:hibernate-validator'
    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('startPostgres', Exec) {
    commandLine 'docker-compose', '-f', './tools/docker-compose.yml', '-p', 'qrekru', 'up', '-d'
}

tasks.register('stopPostgres', Exec) {
    commandLine 'docker-compose', '-p', 'qrekru', '-f', './tools/docker-compose.yml', 'down'
}

tasks.register('populateDatabase', Exec) {
    commandLine "docker", "exec", "qrekru_postgres_1", "psql", "-U", "ui_test", "-d", "ui_test", "-a", "-f", "ui_test_populate.sql"
    environment 'PGPASSWORD', 'ui_test'
}

tasks.register('runContainer', Exec) {
    commandLine "sh",  "$projectDir/container.sh"
    commandLine 'docker-compose', 'up', '-d'
}
